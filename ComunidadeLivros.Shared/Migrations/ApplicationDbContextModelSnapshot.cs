// <auto-generated />
using System;
using ComunidadeLivros.Shared.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComunidadeLivros.Shared.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComunidadeLivros.Shared.Data.Models.Autor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MidiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.HasIndex("MidiaId");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("ComunidadeLivros.Shared.Data.Models.Genero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("ComunidadeLivros.Shared.Data.Models.Livro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AutorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MidiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sinopse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("GeneroId");

                    b.HasIndex("MidiaId");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("ComunidadeLivros.Shared.Data.Models.Midia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MidiaLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Midias");
                });

            modelBuilder.Entity("ComunidadeLivros.Shared.Data.Models.Autor", b =>
                {
                    b.HasOne("ComunidadeLivros.Shared.Data.Models.Genero", "Genero")
                        .WithMany("Autores")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ComunidadeLivros.Shared.Data.Models.Midia", "Midia")
                        .WithMany("Autores")
                        .HasForeignKey("MidiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Midia");
                });

            modelBuilder.Entity("ComunidadeLivros.Shared.Data.Models.Livro", b =>
                {
                    b.HasOne("ComunidadeLivros.Shared.Data.Models.Autor", "Autor")
                        .WithMany("Livros")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ComunidadeLivros.Shared.Data.Models.Genero", "Genero")
                        .WithMany("Livros")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ComunidadeLivros.Shared.Data.Models.Midia", "Midia")
                        .WithMany("Livros")
                        .HasForeignKey("MidiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Genero");

                    b.Navigation("Midia");
                });

            modelBuilder.Entity("ComunidadeLivros.Shared.Data.Models.Autor", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("ComunidadeLivros.Shared.Data.Models.Genero", b =>
                {
                    b.Navigation("Autores");

                    b.Navigation("Livros");
                });

            modelBuilder.Entity("ComunidadeLivros.Shared.Data.Models.Midia", b =>
                {
                    b.Navigation("Autores");

                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
